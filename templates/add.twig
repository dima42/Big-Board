{% extends 'loggedin.twig' %}

{% block content %}
<h1>Add puzzle(s)</h1>
<form id="scrapeForm" action="" method="get">

    <p>
        Paste any number of links in the box, one line at a time:
    </p>
    <div class="form-group">
        <textarea name="url-list" id="urls" rows="10" class="form-control"></textarea>
    </div>
    <div class="form-group">
        <label for="meta">Meta info:</label>
        <select id="metaSelect" class="form-control" name="meta">
                <option value="">- - -</option>
            {% for meta in metas %}
                <option {% if meta.parent.id == meta_id %}selected{% endif %} value="{{ meta.parent.id }}">{{ meta.parent.title }}</option>
            {% endfor %}
                <option value="">- - -</option>
                <option value="0">ðŸ†• This is a new meta</option>
        </select>
    </div>
    <button class="btn btn-primary" type="button" id="scrape-button">Submit URLs &rarr;</button>
</form>

<img class="working" src="https://media.giphy.com/media/ule4vhcY1xEKQ/giphy.gif" alt="">

<form class="addForm" action="/add" method="post">
    <div class="addFormError alert alert-danger"></div>
    <div id="form-controls"></div>
    <button id="submit-button" class="btn btn-primary" type="submit">Submit puzzles</button>
</form>
{% endblock %}

{% block scripts %}
<script>
var newPuzzleTemplate;
var successTemplate;

$(function() {
    $.get('/templates/add_puzzle.mst', function(template) {
        newPuzzleTemplate = template;
    });

    $.get('/templates/add_complete.mst', function(template) {
        successTemplate = template;
    });

    $('#scrape-button').click(function(e) {
        e.preventDefault();
        var urls = $('#urls').val();
        var data = {
            'urls': urls
        }
        $('#scrapeForm').hide();
        $('body').attr('data-step', 'scraping');
        $.get('/puzzle_scrape', data, function(response) {
            $('body').attr('data-step', 'step2');
            $.each(response, function(i, puzzleData) {
                puzzleData['i'] = i + 1;
                puzzleData['metaSelect'] = $('#metaSelect').clone().html();
                var renderedForm = Mustache.render(newPuzzleTemplate, puzzleData);
                // var metaSelect = $('#metaSelect');
                // metaSelect.clone().val(metaSelect.val()).attr('name', 'newPuzzles[' + i + '][meta]').appendTo(renderedForm.find('.newPuzzleMeta'));
                $('.addForm #form-controls').append(renderedForm);
            });
            $('.meta-select').val($('#metaSelect').val());
        });
    });

    $('.addForm').submit(function(e) {
        e.preventDefault();

        // If form has already bene submitted, don't allow it to be submitted again
        if ($('#submit-button').prop('disabled')) {
            return;
        }

        $('.addFormError').hide();
        $('.is-invalid').removeClass('is-invalid');
        $('#submit-button').prop('disabled', true);
        $('body').addClass('trippy');

        $.post('/add', $('.addForm').serialize(), function(response) {
            $('body').removeClass('trippy');
            $.each(response['existingTitles'], function(i, puzzleID) {
                $('#' + puzzleID).find('.newPuzzleTitle input').addClass('is-invalid');
            });
            $.each(response['existingURLs'], function(i, puzzleID) {
                $('#' + puzzleID).find('.newPuzzleURL input').addClass('is-invalid');
            });
            $.each(response['existingSlacks'], function(i, puzzleID) {
                $('#' + puzzleID).find('.newPuzzleSlack input').addClass('is-invalid');
            });

            if ($('.is-invalid').length) {
                $('.addFormError').html('The values outlined in red are already in use. Please enter something unique and re-submit.').show();
                $('#submit-button').prop('disabled', false);
            } else {
                $('#submit-button').hide();
            }

            $.each(response['newPuzzles'], function(i, puzzleData) {
                var renderedCard = Mustache.render(successTemplate, puzzleData);
                $('#' + puzzleData['puzzleID']).html(renderedCard);
            });
        });
    });

    $('.addForm').on('click', '.removePuzzle', function(e) {
        e.preventDefault();
        $(this).closest('.puzzleInputGroup').remove();
    });
});
</script>
{% endblock %}
